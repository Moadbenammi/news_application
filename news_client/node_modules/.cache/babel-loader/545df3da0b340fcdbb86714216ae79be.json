{"ast":null,"code":"var _jsxFileName = \"/home/moadbenammi/WebProject/news_app_client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport Navbar from \"./Components/Navbar\";\nimport Container from \"@material-ui/core/Container\";\nimport axios from \"axios\";\nimport { useState, useEffect } from \"react\";\nimport Posts from \"./Components/Posts\";\nimport Pagination from \"./Components/Pagination\";\nimport PostData from \"./Components/PostData\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [posts, setPosts] = useState([]);\n  const [postData, setPostData] = useState([]);\n  const [postId, setPostId] = useState(0);\n  const [loading, setLoading] = useState(false);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [postsPerPage] = useState(4);\n  const [search, setSearch] = useState(\"\");\n  useEffect(() => {\n    const fetchPosts = async () => {\n      setLoading(true);\n      const res = await axios.get(\"https://jsonplaceholder.typicode.com/posts\");\n      setPosts(res.data);\n      setLoading(false);\n    };\n\n    fetchPosts();\n  }, []); //Get a single post :\n\n  const fetchOnePost = async id => {\n    const res = await axios.get(`https://jsonplaceholder.typicode.com/posts/${id}`);\n    setPostData(res.data);\n  };\n\n  useEffect(() => {}, [postId]); //Search handling\n\n  const handleSearch = e => {\n    setSearch(e.target.value);\n  };\n\n  const filteredPosts = posts.filter(post => post.title.toLowerCase().includes(search.toLowerCase())); //Pagination\n\n  const indexOfLastPost = currentPage * postsPerPage;\n  const indexOfFirstPost = indexOfLastPost - postsPerPage;\n  const currentPosts = posts.slice(indexOfFirstPost, indexOfLastPost);\n\n  const paginate = pageNumber => setCurrentPage(pageNumber);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      handleSearch: handleSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), postId == 0 ? /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"md\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Best News App Ever\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Posts, {\n        posts: search == \"\" ? currentPosts : filteredPosts,\n        setPostId: set,\n        loading: loading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this), search == \"\" ? /*#__PURE__*/_jsxDEV(Pagination, {\n        postsPerPage: postsPerPage,\n        totalPosts: posts.length,\n        paginate: paginate,\n        currentPage: currentPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"md\",\n      children: /*#__PURE__*/_jsxDEV(PostData, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"ZCiHJ3t509/m6uP7ZhZ1GBrnX04=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/moadbenammi/WebProject/news_app_client/src/App.js"],"names":["Navbar","Container","axios","useState","useEffect","Posts","Pagination","PostData","App","posts","setPosts","postData","setPostData","postId","setPostId","loading","setLoading","currentPage","setCurrentPage","postsPerPage","search","setSearch","fetchPosts","res","get","data","fetchOnePost","id","handleSearch","e","target","value","filteredPosts","filter","post","title","toLowerCase","includes","indexOfLastPost","indexOfFirstPost","currentPosts","slice","paginate","pageNumber","set","length"],"mappings":"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","sourcesContent":["import \"./App.css\";\nimport Navbar from \"./Components/Navbar\";\nimport Container from \"@material-ui/core/Container\";\nimport axios from \"axios\";\nimport { useState, useEffect } from \"react\";\nimport Posts from \"./Components/Posts\";\nimport Pagination from \"./Components/Pagination\";\nimport PostData from \"./Components/PostData\";\n\nfunction App() {\n  const [posts, setPosts] = useState([]);\n  const [postData, setPostData] = useState([]);\n  const [postId, setPostId] = useState(0);\n  const [loading, setLoading] = useState(false);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [postsPerPage] = useState(4);\n  const [search, setSearch] = useState(\"\");\n\n  useEffect(() => {\n    const fetchPosts = async () => {\n      setLoading(true);\n      const res = await axios.get(\"https://jsonplaceholder.typicode.com/posts\");\n      setPosts(res.data);\n      setLoading(false);\n    };\n\n    fetchPosts();\n  }, []);\n\n  //Get a single post :\n  const fetchOnePost = async (id) => {\n    const res = await axios.get(`https://jsonplaceholder.typicode.com/posts/${id}`);\n    setPostData(res.data);\n  };\n\n  useEffect(()=>{\n\n  },[postId]);\n\n\n\n  //Search handling\n  const handleSearch = (e) => {\n    setSearch(e.target.value);\n  };\n\n  const filteredPosts = posts.filter((post) =>\n    post.title.toLowerCase().includes(search.toLowerCase())\n  );\n\n  //Pagination\n  const indexOfLastPost = currentPage * postsPerPage;\n  const indexOfFirstPost = indexOfLastPost - postsPerPage;\n  const currentPosts = posts.slice(indexOfFirstPost, indexOfLastPost);\n\n  const paginate = (pageNumber) => setCurrentPage(pageNumber);\n\n  return (\n    <div className='App'>\n      <Navbar handleSearch={handleSearch} />\n\n      {postId == 0 ? (\n        <Container maxWidth='md'>\n          <h1>Best News App Ever</h1>\n          <Posts posts={search == \"\" ? currentPosts : filteredPosts} setPostId={set} loading={loading} />\n          {search == \"\" ? (\n            <Pagination\n              postsPerPage={postsPerPage}\n              totalPosts={posts.length}\n              paginate={paginate}\n              currentPage={currentPage}\n            />\n          ) : null}\n        </Container>\n      ) : (\n        <Container maxWidth='md'>\n          <PostData />\n        </Container>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}